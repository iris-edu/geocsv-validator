{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "GeoCSV Validator",
        "description":"
A REST like service to validate GeoCSV content.


GeocsvValidator will read content from text provided by POST.
A short report shows validation results and counts of
 properties like null fields, type mismatch, line count, etc.


This validator does not count null fields as a failure. However, to identify
lines with null_fields, set
parameter **null_fields**  to true to report lines with null fields.


The csv.reader module used in this code behaves differently
between python 2 and 3 on UNICODE characters. For consistent behavior, UNICODE
characters are treated like ASCII. To see lines which contain of UNICODE
characters, use and the **unicode** parameter.

",
        "termsOfService": "TBD",
        "contact": {
            "name": "GeoWS Building Block",
            "email": "geows@iris.washington.edu"
        },
        "license": {
            "name": "Data provided under GNU Lesser General Public License",
            "url": "http://www.gnu.org/licenses/"
        }
    },
    "paths": {
        "/geocsv/1/validate": {
            "post": {
                "tags": [
                    "GeoCSV"
                ],
                "summary": "Get validate results from query against an input URL",
                "description": "<p>The <strong>validate</strong> service provides a report from the validation operation.<p>TBD <a href='http://tbd.line/xyz'>See TBD</a></p>",
                "operationId": "getValidate",
                "requestBody": {
                    "description": "GeoCSV text",
                    "content": {
                        "text/plain": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request, and error messages releated to client interaction with service",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error, and error messages related to handler operation or geocsvTornadoService configuration",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "head": {
                "tags": [
                    "GeoCSV"
                ],
                "summary": "Get validate results from query against an input URL",
                "description": "<p>The <strong>geocsv validate</strong> service provides a report from the validation operation.<p>This web service complements the web application at <a href='http://www.wovodat.org/precursor/index_unrest_devel_v6.php'>See your volcano</a></p>",
                "operationId": "headValidate",
                "responses": {
                    "200": {
                        "description": "Successful"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request, and error messages releated to client interaction with geocsvTornadoService",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error, and error messages related to handler operation or geocsvTornadoService configuration",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "verbose",
                    "in": "query",
                    "description": "Show every line",
                    "required": false,
                    "schema": {
                        "type": "boolean"
                    }
                },
                {
                    "name": "octothorp",
                    "in": "query",
                    "description": "Show lines which have # as first character",
                    "required": false,
                    "schema": {
                        "type": "boolean"
                    }
                },
                {
                    "name": "unicode",
                    "in": "query",
                    "description": "Show lines which contain UNICODE characters",
                    "required": false,
                    "schema": {
                        "type": "boolean"
                    }
                },
                {
                    "name": "null_fields",
                    "in": "query",
                    "description": "Show lines where any field is null",
                    "required": false,
                    "schema": {
                        "type": "boolean"
                    }
                },
                {
                    "name": "field_type",
                    "in": "query",
                    "description": "Show lines where any field does not match its respective **field_type** header value, i.e. for types integer, float, or datetime",
                    "required": false,
                    "schema": {
                        "type": "boolean"
                    }
                }
            ]
        },
        "/geocsv/1/version": {
            "get": {
                "tags": [
                    "GeoCSV"
                ],
                "summary": "Get version of service",
                "description": "<p>The <strong>version</strong> service provides the version number of this service)",
                "operationId": "getVersion",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not Acceptable - look at Accept headers, geocsvTornadoService only returns text/plain here",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "http://geows.ds.iris.edu/geows"
        }
    ],
    "components": {
        "securitySchemes": {
            "api_key": {
                "type": "apiKey",
                "name": "api_key",
                "in": "header"
            },
            "TBD_auth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "http://TBD/api/oauth/dialog",
                        "scopes": {}
                    }
                }
            }
        }
    }
}
